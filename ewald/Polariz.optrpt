
Begin optimization report for: Polariz::Polariz(Polariz *, Cell &, std::vector<Mol *, std::allocator<Mol *>> &, std::vector<Mlwf, std::allocator<Mlwf>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at Matrix.h(145,14) inlined into Polariz.C(25,23)
   remark #15389: vectorization support: reference this_18108 has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15427: loop was completely unrolled
   remark #15301: BLOCK WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 1.500 
   remark #15478: estimated potential speedup: 1.770 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_construct.h(102,4) inlined into Polariz.C(41,15)
   remark #15382: vectorization support: call to function operator delete(void *) cannot be vectorized   [ /usr/include/c++/4.8/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_construct.h(102,4) inlined into Polariz.C(46,16)
   remark #15382: vectorization support: call to function operator delete(void *) cannot be vectorized   [ /usr/include/c++/4.8/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at Polariz.C(51,3)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at Polariz.C(59,3)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at Polariz.C(74,3)
<Peeled>
LOOP END

LOOP BEGIN at Polariz.C(74,3)
   remark #15388: vectorization support: reference this has aligned access   [ Polariz.C(74,34) ]
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 1.380 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at Polariz.C(74,3)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::_M_fill_insert(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::iterator, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::value_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(692,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(462,5)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(692,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(462,5)
   remark #15388: vectorization support: reference __first_23019 has aligned access   [ /usr/include/c++/4.8/bits/stl_algobase.h(693,3) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 3 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 1.920 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(692,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(462,5)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(467,5)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(467,5)
   remark #15388: vectorization support: reference __first_23083 has aligned access   [ /usr/include/c++/4.8/bits/stl_algobase.h(751,3) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 3 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 1.920 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(467,5)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(692,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(476,5)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(692,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(476,5)
   remark #15388: vectorization support: reference __first_23019 has aligned access   [ /usr/include/c++/4.8/bits/stl_algobase.h(693,3) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 3 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 1.920 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(692,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(476,5)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(489,5)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(489,5)
   remark #15388: vectorization support: reference __first_23083 has aligned access   [ /usr/include/c++/4.8/bits/stl_algobase.h(751,3) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 3 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 1.920 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(489,5)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::_M_fill_insert(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::iterator, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type, const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::value_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.8/bits/stl_uninitialized.h(74,8) inlined into /usr/include/c++/4.8/bits/vector.tcc(455,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(536,4) inlined into /usr/include/c++/4.8/bits/vector.tcc(460,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(681,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(462,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_uninitialized.h(186,8) inlined into /usr/include/c++/4.8/bits/vector.tcc(467,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_uninitialized.h(74,8) inlined into /usr/include/c++/4.8/bits/vector.tcc(472,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/vector.tcc(477,6)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_uninitialized.h(186,8) inlined into /usr/include/c++/4.8/bits/vector.tcc(489,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_uninitialized.h(74,8) inlined into /usr/include/c++/4.8/bits/vector.tcc(495,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_uninitialized.h(74,8) inlined into /usr/include/c++/4.8/bits/vector.tcc(502,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8/bits/vector.tcc(518,8)
   remark #15382: vectorization support: call to function operator delete(void *) cannot be vectorized   [ /usr/include/c++/4.8/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __first_25694 line 160 and  line 110
   remark #15346: vector dependence: assumed FLOW dependence between  line 110 and __first_25694 line 160
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::pointer>(std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::pointer, std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::pointer)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.8/bits/stl_construct.h(102,4)
   remark #15382: vectorization support: call to function operator delete(void *) cannot be vectorized   [ /usr/include/c++/4.8/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __first line 160 and  line 110
   remark #15346: vector dependence: assumed FLOW dependence between  line 110 and __first line 160
LOOP END
===========================================================================

Begin optimization report for: std::vector<double *, std::allocator<double *>>::_M_fill_insert(std::vector<double *, std::allocator<double *>> *, std::vector<double *, std::allocator<double *>>::iterator, std::vector<double *, std::allocator<double *>>::size_type, const std::vector<double *, std::allocator<double *>>::value_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(692,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(462,5)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(692,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(462,5)
   remark #15388: vectorization support: reference __first_25418 has aligned access   [ /usr/include/c++/4.8/bits/stl_algobase.h(693,3) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 1.290 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(692,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(462,5)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(467,5)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(467,5)
   remark #15388: vectorization support: reference __first_25468 has aligned access   [ /usr/include/c++/4.8/bits/stl_algobase.h(751,3) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 1.290 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(467,5)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(692,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(476,5)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(692,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(476,5)
   remark #15388: vectorization support: reference __first_25418 has aligned access   [ /usr/include/c++/4.8/bits/stl_algobase.h(693,3) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 1.290 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(692,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(476,5)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(489,5)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(489,5)
   remark #15388: vectorization support: reference __first_25468 has aligned access   [ /usr/include/c++/4.8/bits/stl_algobase.h(751,3) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 1.290 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(489,5)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: std::vector<D3vector *, std::allocator<D3vector *>>::_M_fill_insert(std::vector<D3vector *, std::allocator<D3vector *>> *, std::vector<D3vector *, std::allocator<D3vector *>>::iterator, std::vector<D3vector *, std::allocator<D3vector *>>::size_type, const std::vector<D3vector *, std::allocator<D3vector *>>::value_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(692,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(462,5)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(692,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(462,5)
   remark #15388: vectorization support: reference __first_24331 has aligned access   [ /usr/include/c++/4.8/bits/stl_algobase.h(693,3) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 1.290 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(692,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(462,5)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(467,5)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(467,5)
   remark #15388: vectorization support: reference __first_24381 has aligned access   [ /usr/include/c++/4.8/bits/stl_algobase.h(751,3) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 1.290 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(467,5)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(692,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(476,5)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(692,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(476,5)
   remark #15388: vectorization support: reference __first_24331 has aligned access   [ /usr/include/c++/4.8/bits/stl_algobase.h(693,3) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 1.290 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(692,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(476,5)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(489,5)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(489,5)
   remark #15388: vectorization support: reference __first_24381 has aligned access   [ /usr/include/c++/4.8/bits/stl_algobase.h(751,3) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 1.290 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8/bits/vector.tcc(489,5)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: Polariz::Polariz(Polariz *const, Cell &, std::vector<Mol *, std::allocator<Mol *>> &, std::vector<Mlwf, std::allocator<Mlwf>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at Matrix.h(145,14) inlined into Polariz.C(21,10)
   remark #15389: vectorization support: reference this_18108 has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15427: loop was completely unrolled
   remark #15301: BLOCK WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 1.500 
   remark #15478: estimated potential speedup: 1.770 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_construct.h(102,4) inlined into Polariz.C(21,10)
   remark #15382: vectorization support: call to function operator delete(void *) cannot be vectorized   [ /usr/include/c++/4.8/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_construct.h(102,4) inlined into Polariz.C(21,10)
   remark #15382: vectorization support: call to function operator delete(void *) cannot be vectorized   [ /usr/include/c++/4.8/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at Polariz.C(51,3) inlined into Polariz.C(21,10)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at Polariz.C(59,3) inlined into Polariz.C(21,10)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at Polariz.C(74,3) inlined into Polariz.C(21,10)
<Peeled>
LOOP END

LOOP BEGIN at Polariz.C(74,3) inlined into Polariz.C(21,10)
   remark #15388: vectorization support: reference this has aligned access   [ Polariz.C(74,34) ]
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 1.380 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at Polariz.C(74,3) inlined into Polariz.C(21,10)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: Polariz::Calculate_mol_Ewald(Polariz *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at Polariz.C(192,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between F64 line 193 and this line 193
   remark #15346: vector dependence: assumed ANTI dependence between this line 193 and F64 line 193
LOOP END

LOOP BEGIN at Polariz.C(195,47)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at Polariz.C(211,3)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END


Non-optimizable loops:


LOOP BEGIN at Polariz.C(190,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: Polariz::Calculate_mol(Polariz *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at Polariz.C(251,47)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at Polariz.C(266,5)
   remark #15388: vectorization support: reference polari has aligned access   [ Polariz.C(266,39) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 2.250 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at Polariz.C(266,5)
<Remainder>
LOOP END

LOOP BEGIN at Polariz.C(268,46)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at Polariz.C(277,5)
   remark #15388: vectorization support: reference elocal has aligned access   [ Polariz.C(277,39) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 2.250 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at Polariz.C(277,5)
<Remainder>
LOOP END

LOOP BEGIN at Polariz.C(282,5)
   remark #15388: vectorization support: reference elocal_loc has aligned access   [ Polariz.C(282,39) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 2.250 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at Polariz.C(282,5)
<Remainder>
LOOP END

LOOP BEGIN at Polariz.C(294,7)
   remark #15388: vectorization support: reference polarj has aligned access   [ Polariz.C(294,41) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 2.250 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at Polariz.C(294,7)
<Remainder>
LOOP END

LOOP BEGIN at Polariz.C(297,48)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at Polariz.C(355,7)
   remark #15389: vectorization support: reference elocal has unaligned access   [ Polariz.C(355,41) ]
   remark #15389: vectorization support: reference elocal has unaligned access   [ Polariz.C(355,41) ]
   remark #15388: vectorization support: reference elocal_loc has aligned access   [ Polariz.C(355,41) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 6 
   remark #15477: vector loop cost: 16.000 
   remark #15478: estimated potential speedup: 1.220 
   remark #15479: lightweight vector operations: 3 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at Polariz.C(355,7)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at Polariz.C(250,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END

LOOP BEGIN at Polariz.C(257,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END

LOOP BEGIN at Polariz.C(285,5)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at ../lib/Cell.h(94,5) inlined into Polariz.C(305,10)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at ../lib/Cell.h(97,7) inlined into Polariz.C(305,10)
         remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
      LOOP END
   LOOP END

   LOOP BEGIN at ../lib/Cell.h(106,5) inlined into Polariz.C(305,10)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at ../lib/Cell.h(109,7) inlined into Polariz.C(305,10)
         remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
      LOOP END
   LOOP END

   LOOP BEGIN at Polariz.C(312,7)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at Polariz.C(313,7)
         remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

         LOOP BEGIN at Polariz.C(314,7)
            remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

            LOOP BEGIN at Polariz.C(330,9)
               remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

               LOOP BEGIN at Polariz.C(331,11)
                  remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
               LOOP END
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: Polariz::Calculate_mlwf_Ewald(Polariz *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at Polariz.C(100,3)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.

   LOOP BEGIN at Polariz.C(135,5)
      remark #15382: vectorization support: call to function std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setw) cannot be vectorized   [ Polariz.C(136,12) ]
      remark #15382: vectorization support: call to function std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double) cannot be vectorized   [ Polariz.C(136,24) ]
      remark #15382: vectorization support: call to function std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setw) cannot be vectorized   [ Polariz.C(137,12) ]
      remark #15382: vectorization support: call to function std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double) cannot be vectorized   [ Polariz.C(137,24) ]
      remark #15382: vectorization support: call to function std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setw) cannot be vectorized   [ Polariz.C(138,12) ]
      remark #15382: vectorization support: call to function std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double) cannot be vectorized   [ Polariz.C(138,24) ]
      remark #15382: vectorization support: call to function std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setw) cannot be vectorized   [ Polariz.C(139,12) ]
      remark #15382: vectorization support: call to function std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double) cannot be vectorized   [ Polariz.C(139,24) ]
      remark #15382: vectorization support: call to function std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setw) cannot be vectorized   [ Polariz.C(140,12) ]
      remark #15382: vectorization support: call to function std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double) cannot be vectorized   [ Polariz.C(140,24) ]
      remark #15382: vectorization support: call to function std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setw) cannot be vectorized   [ Polariz.C(141,12) ]
      remark #15382: vectorization support: call to function std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double) cannot be vectorized   [ Polariz.C(141,24) ]
      remark #15382: vectorization support: call to function std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setw) cannot be vectorized   [ Polariz.C(142,12) ]
      remark #15382: vectorization support: call to function std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double) cannot be vectorized   [ Polariz.C(142,24) ]
      remark #15382: vectorization support: call to function std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setw) cannot be vectorized   [ Polariz.C(143,12) ]
      remark #15382: vectorization support: call to function std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double) cannot be vectorized   [ Polariz.C(143,24) ]
      remark #15382: vectorization support: call to function std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &)) cannot be vectorized   [ Polariz.C(143,36) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between __1STRUCTVAR.34 line 223 and __1STRUCTVAR.34 line 136
      remark #15346: vector dependence: assumed ANTI dependence between _M_n line 136 and _M_n line 223
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: Polariz::Polar_mlwf_rotate(Polariz *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at Polariz.C(158,3)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: Polariz::Calculate_mlwf(Polariz *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at Polariz.C(421,5)
   remark #15388: vectorization support: reference elocal has aligned access   [ Polariz.C(421,39) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 2.250 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at Polariz.C(421,5)
<Remainder>
LOOP END

LOOP BEGIN at Polariz.C(462,11)
   remark #15382: vectorization support: call to function std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setprecision) cannot be vectorized   [ Polariz.C(464,16) ]
   remark #15382: vectorization support: call to function std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setw) cannot be vectorized   [ Polariz.C(464,35) ]
   remark #15382: vectorization support: call to function std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double) cannot be vectorized   [ Polariz.C(464,47) ]
   remark #15382: vectorization support: call to function std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *) cannot be vectorized   [ Polariz.C(464,56) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between __1STRUCTVAR.44 line 193 and __1STRUCTVAR.44 line 464
   remark #15346: vector dependence: assumed ANTI dependence between _M_n line 464 and _M_n line 193
LOOP END

LOOP BEGIN at Polariz.C(488,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at Polariz.C(423,5)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at ../lib/Cell.h(94,5) inlined into Polariz.C(434,10)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at ../lib/Cell.h(97,7) inlined into Polariz.C(434,10)
         remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
      LOOP END
   LOOP END

   LOOP BEGIN at ../lib/Cell.h(106,5) inlined into Polariz.C(434,10)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at ../lib/Cell.h(109,7) inlined into Polariz.C(434,10)
         remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
      LOOP END
   LOOP END

   LOOP BEGIN at Polariz.C(439,7)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

      LOOP BEGIN at Polariz.C(440,7)
         remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

         LOOP BEGIN at Polariz.C(441,7)
            remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

            LOOP BEGIN at Polariz.C(450,9)
               remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

               LOOP BEGIN at Polariz.C(451,11)
                  remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
               LOOP END
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: Polariz::~Polariz(Polariz *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.8/bits/stl_construct.h(102,4) inlined into Polariz.C(498,3)
   remark #15382: vectorization support: call to function operator delete(void *) cannot be vectorized   [ /usr/include/c++/4.8/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_construct.h(102,4) inlined into Polariz.C(498,3)
   remark #15382: vectorization support: call to function operator delete(void *) cannot be vectorized   [ /usr/include/c++/4.8/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_construct.h(102,4) inlined into Polariz.C(498,3)
   remark #15382: vectorization support: call to function operator delete(void *) cannot be vectorized   [ /usr/include/c++/4.8/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_construct.h(102,4) inlined into Polariz.C(499,3)
   remark #15382: vectorization support: call to function operator delete(void *) cannot be vectorized   [ /usr/include/c++/4.8/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_construct.h(102,4) inlined into Polariz.C(499,3)
   remark #15382: vectorization support: call to function operator delete(void *) cannot be vectorized   [ /usr/include/c++/4.8/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_construct.h(102,4) inlined into Polariz.C(499,3)
   remark #15382: vectorization support: call to function operator delete(void *) cannot be vectorized   [ /usr/include/c++/4.8/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_construct.h(102,4) inlined into Polariz.C(500,1)
   remark #15382: vectorization support: call to function operator delete(void *) cannot be vectorized   [ /usr/include/c++/4.8/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_construct.h(102,4) inlined into Polariz.C(500,1)
   remark #15382: vectorization support: call to function operator delete(void *) cannot be vectorized   [ /usr/include/c++/4.8/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.8/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8/bits/stl_vector.h(416,9)
   remark #15382: vectorization support: call to function operator delete(void *) cannot be vectorized   [ /usr/include/c++/4.8/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __first_25694 line 160 and  line 110
   remark #15346: vector dependence: assumed FLOW dependence between  line 110 and __first_25694 line 160
LOOP END
===========================================================================

Begin optimization report for: Polariz::~Polariz(Polariz *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.8/bits/stl_construct.h(102,4) inlined into Polariz.C(496,10)
   remark #15382: vectorization support: call to function operator delete(void *) cannot be vectorized   [ /usr/include/c++/4.8/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_construct.h(102,4) inlined into Polariz.C(496,10)
   remark #15382: vectorization support: call to function operator delete(void *) cannot be vectorized   [ /usr/include/c++/4.8/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_construct.h(102,4) inlined into Polariz.C(496,10)
   remark #15382: vectorization support: call to function operator delete(void *) cannot be vectorized   [ /usr/include/c++/4.8/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_construct.h(102,4) inlined into Polariz.C(496,10)
   remark #15382: vectorization support: call to function operator delete(void *) cannot be vectorized   [ /usr/include/c++/4.8/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_construct.h(102,4) inlined into Polariz.C(496,10)
   remark #15382: vectorization support: call to function operator delete(void *) cannot be vectorized   [ /usr/include/c++/4.8/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_construct.h(102,4) inlined into Polariz.C(496,10)
   remark #15382: vectorization support: call to function operator delete(void *) cannot be vectorized   [ /usr/include/c++/4.8/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_construct.h(102,4) inlined into Polariz.C(496,10)
   remark #15382: vectorization support: call to function operator delete(void *) cannot be vectorized   [ /usr/include/c++/4.8/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.8/bits/stl_construct.h(102,4) inlined into Polariz.C(496,10)
   remark #15382: vectorization support: call to function operator delete(void *) cannot be vectorized   [ /usr/include/c++/4.8/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================
